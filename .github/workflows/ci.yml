name: Laravel CI

on:
  push:
    branches:
      - main
      - develop
      - feature/*
    tags:
      - '*'           # triggers for all tags like 1.0, v1.0, v2.3.1 etc.

    permissions:
      contents: write  # üü¢ This is required for pushing tags


  pull_request:
    branches:
      - main
      - develop

jobs:
  laravel-ci:
    name: Laravel Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false  # ‚õî Disable GitHub bot override

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo, mysql
          coverage: xdebug

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Copy .env and generate key
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h 127.0.0.1 --silent; do
            echo "Waiting for MySQL..."; sleep 5;
          done

      - name: Run migrations
        run: php artisan migrate --force

      - name: Run tests
        run: php artisan test

      - name: Lint code
        run: ./vendor/bin/phpcs --standard=PSR12 app routes tests

      - name: Notify on failure
        if: failure()
        run: |
          curl -X POST -H "Content-type: application/json" \
          --data "{\"text\":\" CI Failed on yousif30303/laravel-blog @ refs/heads/feature/github-check-discovery-modify8\"}" \
          ${{ secrets.SLACK_WEBHOOK }}

      - name: Generate test coverage report
        run: ./vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: SonarCloud Analysis (new action)
        uses: SonarSource/sonarqube-scan-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_PROJECT_KEY: yousif30303_laravel-blog
          SONAR_ORGANIZATION: yousif30303

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Check SonarCloud Quality Gate result
        run: |
          echo "Waiting for SonarCloud Quality Gate result..."
          for i in {1..10}; do
            sleep 10
            STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
              "https://sonarcloud.io/api/qualitygates/project_status?projectKey=yousif30303_laravel-blog" \
              | jq -r '.projectStatus.status')
            echo "Status: $STATUS"
            if [ "$STATUS" == "OK" ]; then
              echo "‚úÖ Quality Gate Passed!"
              exit 0
            elif [ "$STATUS" == "ERROR" ]; then
              echo "‚ùå Quality Gate Failed!"
              exit 1
            fi
          done
          echo "‚ùó Timed out waiting for Quality Gate result."
          exit 1

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    
      - name: Create and Push Git Tag
        env:
          VERSION: ${{ steps.set_version.outputs.VERSION }}
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          echo "VERSION: $VERSION"
          echo "TOKEN length: ${#TOKEN}"

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git fetch --all --tags
          git tag $VERSION

          # üö® Remove and re-add the origin with the token-based auth
          git remote remove origin
          git remote add origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}

          git push origin $VERSION

        


